let express,expressAsyncHandler,data,Product;_d3a‍.x([["default",()=>_d3a‍.o]]);_d3a‍.w("express",[["default",["express"],function(v){express=v}]]);_d3a‍.w("express-async-handler",[["default",["expressAsyncHandler"],function(v){expressAsyncHandler=v}]]);_d3a‍.w("../data.js",[["default",["data"],function(v){data=v}]]);_d3a‍.w("../models/productModel.js",[["default",["Product"],function(v){Product=v}]]);



const productRouter=express.Router();

productRouter.get('/seed',expressAsyncHandler(async(req,res)=>
{
    const createdProducts=await Product.insertMany(data.products);
    res.send({createdProducts});
}))
productRouter.get('/',async(req,res)=>
{
    const products=await Product.find({});
    res.send(products)
})
productRouter.get('/:id',expressAsyncHandler(async(req,res)=>
{
    const product=await Product.findById(req.params.id);
    if(product)
    {
        res.status(200).send(product);
    }
    else{
        res.status(400).send({message:'product Not found'});
    }
}))
_d3a‍.d(productRouter);