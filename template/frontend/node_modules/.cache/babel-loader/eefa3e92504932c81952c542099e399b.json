{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstant\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_REMOVE_ITEM:\n      return {\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n\n      if (product) {\n        return {\n          cartItems: state.cartItems.map(x => x.product === product.product ? item : x)\n        };\n      }\n\n      return {\n        cartItems: [...state.cartItems, item]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/vipul/amazona/template/frontend/src/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","filter","x","product","payload","item","find","map"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,QAAgD,2BAAhD;AACA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAK,GAAC;AAACC,EAAAA,SAAS,EAAC;AAAX,CAAP,EAAsBC,MAAtB,KACzB;AACE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,gBAAL;AACE,aAAO;AAAEG,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBG,MAAhB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcJ,MAAM,CAACK,OAAjD;AAAb,OAAP;;AACF,SAAKV,aAAL;AACE,YAAMW,IAAI,GAAGN,MAAM,CAACK,OAApB;AACA,YAAMD,OAAO,GAAGN,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAqBJ,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcE,IAAI,CAACF,OAA7C,CAAhB;;AACA,UAAIA,OAAJ,EAAa;AACX,eAAO;AACLL,UAAAA,SAAS,EACPD,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBL,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcA,OAAO,CAACA,OAAtB,GAAgCE,IAAhC,GAAuCH,CAAhE;AAFG,SAAP;AAID;;AACD,aAAO;AAAEJ,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBO,IAArB;AAAb,OAAP;;AAEF;AACE,aAAOR,KAAP;AAfJ;AAiBD,CAnBM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstant\";\nexport const cartReducer=(state={cartItems:[]},action)=>\n{\n  switch (action.type) {\n    case CART_REMOVE_ITEM:\n      return { cartItems: state.cartItems.filter(x => x.product !== action.payload) };\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const product = state.cartItems.find(x => x.product === item.product);\n      if (product) {\n        return {\n          cartItems:\n            state.cartItems.map(x => x.product === product.product ? item : x)\n        };\n      }\n      return { cartItems: [...state.cartItems, item] };\n\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}