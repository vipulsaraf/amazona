{"ast":null,"code":"import { CART_EMPTY, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS } from \"../constants/orderConstants\";\nimport Axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/vipul/amazonaproject/template/frontend/src/actions/orderActions.js"],"names":["CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","Axios","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,iBAArB,EAAwCC,oBAAxC,EAA8DC,oBAA9D,EACEC,kBADF,EAEGC,qBAFH,EAGGC,qBAHH,QAGgC,6BAHhC;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAEC,KAAD,IAAS,OAAMC,QAAN,EAAeC,QAAf,KAClC;AAEID,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACV,oBAAN;AACPW,IAAAA,OAAO,EAACJ;AADD,GAAD,CAAR;;AAEA,MAAG;AACC,UAAM;AAACK,MAAAA,UAAU,EAAC;AAACC,QAAAA;AAAD;AAAZ,QAAwBJ,QAAQ,EAAtC;AACF,UAAM;AAACK,MAAAA;AAAD,QAAO,MAAMT,KAAK,CAACU,IAAN,CAAW,aAAX,EAAyBR,KAAzB,EAA+B;AAC3CS,MAAAA,OAAO,EAAC;AAEJC,QAAAA,aAAa,EAAE,UAASJ,QAAQ,CAACK,KAAM;AAFnC;AADmC,KAA/B,CAAnB;AAOAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACT,oBAAN;AAA2BU,MAAAA,OAAO,EAACG,IAAI,CAACP;AAAxC,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACZ;AAAN,KAAD,CAAR;AACAqB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAZD,CAYC,OAAMC,KAAN,EAAY;AACbb,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACX,iBAAN;AACLY,MAAAA,OAAO,EAACU,KAAK,CAACC,QAAN,IAAgBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApC,GACPF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADb,GAERF,KAAK,CAACE;AAHD,KAAD,CAAR;AAIC;AACJ,CAvBM;AAwBP,OAAO,MAAMC,YAAY,GAAEC,OAAD,IAAW,OAAMjB,QAAN,EAAeC,QAAf,KACrC;AACED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAACP,qBAAN;AAA4BQ,IAAAA,OAAO,EAACc;AAApC,GAAD,CAAR;AACA,QAAM;AACJb,IAAAA,UAAU,EAAC;AAACC,MAAAA;AAAD;AADP,MAEFJ,QAAQ,EAFZ;;AAGA,MAAG;AACD,UAAM;AAACK,MAAAA;AAAD,QAAO,MAAMT,KAAK,CAACqB,GAAN,CAAW,eAAcD,OAAQ,EAAjC,EAAmC;AACpDT,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAE,UAASJ,QAAQ,CAACK,KAAM;AAAxC;AAD4C,KAAnC,CAAnB;AAGAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACN,qBAAN;AAA4BO,MAAAA,OAAO,EAACG;AAApC,KAAD,CAAR;AAED,GAND,CAMC,OAAMO,KAAN,EAAY;AACX,UAAME,OAAO,GAACF,KAAK,CAACC,QAAN,IAAgBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAApC,GACdF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADN,GAEdF,KAAK,CAACE,OAFN;AAGAf,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAACR,kBAAN;AAAyBS,MAAAA,OAAO,EAACY;AAAjC,KAAD,CAAR;AACD;AACF,CAlBM","sourcesContent":["import { CART_EMPTY, ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, \n  ORDER_DETAILS_FAIL,\n   ORDER_DETAILS_REQUEST, \n   ORDER_DETAILS_SUCCESS } from \"../constants/orderConstants\"\n\nimport Axios from 'axios';\nexport const createOrder=(order)=>async(dispatch,getState)=>\n{\n  \n    dispatch({type:ORDER_CREATE_REQUEST,\n      payload:order});\n    try{\n        const {userSignin:{userInfo}}=getState();\n      const {data}=await Axios.post('/api/orders',order,{\n             headers:{\n\n                 Authorization:`Bearer ${userInfo.token}`,\n             }\n      }\n      )\n      dispatch({type:ORDER_CREATE_SUCCESS,payload:data.order});\n      dispatch({type:CART_EMPTY});\n      localStorage.removeItem('cartItems')\n    }catch(error){\n    dispatch({type:ORDER_CREATE_FAIL,\n        payload:error.response&&error.response.data.message?\n         error.response.data.message\n       :error.message,})\n    }\n}\nexport const detailsOrder=(orderId)=>async(dispatch,getState)=>\n{\n  dispatch({type:ORDER_DETAILS_REQUEST,payload:orderId});\n  const {\n    userSignin:{userInfo},\n  } = getState();\n  try{\n    const {data}=await Axios.get(`/api/orders/${orderId}`,{\n      headers:{Authorization:`Bearer ${userInfo.token}`}\n    });\n    dispatch({type:ORDER_DETAILS_SUCCESS,payload:data});\n\n  }catch(error){\n    const message=error.response&&error.response.data.message?\n    error.response.data.message:\n    error.message;\n    dispatch({type:ORDER_DETAILS_FAIL,payload:message})\n  }\n}"]},"metadata":{},"sourceType":"module"}